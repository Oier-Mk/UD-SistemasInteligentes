}
# Print Mean Absolute Error
print(paste0("- Mean average error: ", mean_avg_error))
# Print model summary
summary(model)
# Prediction with handwritten parameters
age = c(34)
sex = c("male")
bmi = c(33.8)
children = c(3)
smoker = c("no")
region = c("southwest")
non_smoker_price <- predict(model, newdata = data.frame(age,sex,bmi,children,smoker,region))
smoker = c("yes")
smoker_price     <- predict(model, newdata = data.frame(age,sex,bmi,children,smoker,region))
age = c(39)
sex = c("male")
bmi = c(30.66)
children = c(1)
smoker = c("no")
region = c("southwest")
non_smoker_price <- predict(model, newdata = data.frame(age,sex,bmi,children,smoker,region))
smoker = c("yes")
smoker_price     <- predict(model, newdata = data.frame(age,sex,bmi,children,smoker,region))
incremento_por_fumar <- abs(non_smoker_price - smoker_price)
data$age <- data$age + 5
data$newCharges <- predict(model, newdata = data)
data$difference <- abs(data$newCharges - data$charges)
data <- data[order(-data$difference),]
mayor_incremento <- head(data,3)
View(mayor_incremento)
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clear console
cat("\014")
# Clean workspace
rm(list=ls())
# Set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Install required packages
library(lattice)
library(ggplot2)
library(caret)
library(rpart)
library(rpart.plot)
# Read data from CSV
data <- read.csv(file = "../data/CAR-DETAILS-FROM-CAR-DEKHO.csv", sep =",", header = TRUE)
data$name <- NULL
data$year[data$year <= 2000] <- "<= 2000"
data$year[data$year > 2000 & data$year <= 2005] <- "2000 < x <= 2005"
data$year[data$year > 2005 & data$year <= 2010] <- "2005 < x <= 2010"
data$year[data$year > 2010 & data$year <= 2015] <- "2010 < x <= 2015"
data$year[data$year > 2015 & data$year <= 2020] <- "2015 < x <= 2020"
#for(i in 1:4){
data$selling_price[data$selling_price <= 50000] <- "x <= 50000"
data$selling_price[data$selling_price >  50000 & data$selling_price <= 100000] <- "50000  < x <= 100000"
data$selling_price[data$selling_price > 100000 & data$selling_price <= 200000] <- "100000 < x <= 200000"
data$selling_price[data$selling_price > 200000 & data$selling_price <= 300000] <- "200000 < x <= 300000"
data$selling_price[data$selling_price > 300000 & data$selling_price <= 400000] <- "300000 < x <= 400000"
data$selling_price[data$selling_price > 400000 & data$selling_price <= 500000] <- "400000 < x <= 500000"
data$selling_price[data$selling_price > 500000 & data$selling_price <= 600000] <- "500000 < x <= 600000"
data$selling_price[data$selling_price > 600000] <- "x > 600000"
#for( i in 1:2){
data$km_driven[data$km_driven <= 35000] <- "x <= 35000"
data$km_driven[data$km_driven > 35000 & data$km_driven <= 50000] <- "35000 < x <= 50000"
data$km_driven[data$km_driven > 50000 & data$km_driven <= 65000] <- "50000 < x <= 65000"
data$km_driven[data$km_driven > 65000 & data$km_driven <= 80000] <- "65000 < x <= 80000"
data$km_driven[data$km_driven > 80000 & data$km_driven <= 95000] <- "80000 < x <= 95000"
data$km_driven[data$km_driven > 95000] <- "x > 95000"
# Convert columns to factors
index <- 1:ncol(data)
data[ , index] <- lapply(data[ , index], as.factor)
# Clear Environment
rm(list=ls())
# Set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Clear plots & console
if(!is.null(dev.list())) dev.off()
cat("\014")
# Install required packages
library(ggplot2)
library(lattice)
library(caret)
library(RKEEL)
library(stringr)
# Read data from CSV
data <- read.csv("../data/insurance.csv")
# Percentage of training examples
training_p <- 0.8
# Generate data partition 80% training / 20% test. The result is a vector with
# the indexes of the examples that will be used for the training of the model.
training_indexes <- createDataPartition(y = data$charges, p = training_p, list = FALSE)
# Split training and test data
training_data <- data[training_indexes, ]  # Extract training data using training_indexes
test_data     <- data[-training_indexes, ] # Extract data with the indexes not included in training_indexes
best <- NULL
error_ratio <- 10000
for(i in 1:10){ #Training 10 times the model and getting the one with best resoults
# Create Linear Model using training data. Formula = all the columns except charges
model <- lm(formula = charges ~., data = training_data)
# Make the prediction using the model and test data
prediction <- predict(model, test_data)
# Calculate Mean Average Error
mean_avg_error <- mean(abs(prediction - test_data$charges))
if( mean_avg_error < error_ratio){
best <- model
error_ratio <- mean_avg_error
}
}
# Print Mean Absolute Error
print(paste0("- Mean average error: ", mean_avg_error))
# Print model summary
summary(model)
age = c(39) #creamos una persona ficticia que no fuma con la media de los atributos
sex = c("male")
bmi = c(30.66)
children = c(1)
smoker = c("no")
region = c("southwest")
non_smoker_price <- predict(model, newdata = data.frame(age,sex,bmi,children,smoker,region)) #extraemos el precio estimado
df = data.frame(age,sex,bmi,children,smoker,region)
View(df)
smoker = c("yes") #indicamos que esa misma persona si fuma para ver el cambio
smoker_price     <- predict(model, newdata = data.frame(age,sex,bmi,children,smoker,region)) #extraemos el precio estimado
incremento_por_fumar <- abs(non_smoker_price - smoker_price) #vemos el incremento o decremento que supone fumar o dejar de hacerlo
data$age <- data$age + 5 #incrementamos la edad
data$newCharges <- predict(model, newdata = data) #predecimos el precio en ese tiempo
data$difference <- abs(data$newCharges - data$charges) #calculamos el valor absoluto de la diferencia
data <- data[order(-data$difference),] #ordenamos la diferencia en descendente
mayor_incremento <- head(data,3) #extraemos los usuarios que mayor incremento tendr'an en 5 anyos
View(mayor_incremento)
# Clear Environment
rm(list=ls())
# Set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Clear plots & console
if(!is.null(dev.list())) dev.off()
cat("\014")
# Install required packages
library(ggplot2)
library(lattice)
library(caret)
library(RKEEL)
library(stringr)
# Read data from CSV
data <- read.csv("../data/insurance.csv")
char2num<-function(x){
groups = unique(x)
as.numeric(factor(x, levels=groups))
}
data$sex <- char2num(data$sex)
data$smoker <- char2num(data$smoker)
data$region <- char2num(data$region)
# Set plot structure and margins
par(mfrow = c(2,6), mar=c(1,1,1,1))
# Scatter Plot - Check linear relationships
for (col_name in colnames(data)) {
if (col_name != "charges") {
scatter.smooth(x=data$charges, y=data[[col_name]], main=col_name, col="lightgreen")
}
}
# Correlation between variables
print("Correlation between each attribute and charges: A low correlation (-0.2 < x < 0.2)", quote=FALSE)
for (col_name in colnames(data)) {
print(paste0(col_name, ": ", cor(data$charges, data[[col_name]])), quote=FALSE)
}
# Percentage of training examples
training_p <- 0.8
# Generate data partition 80% training / 20% test. The result is a vector with
# the indexes of the examples that will be used for the training of the model.
training_indexes <- createDataPartition(y = data$charges, p = training_p, list = FALSE)
# Split training and test data
training_data <- data[training_indexes, ]  # Extract training data using training_indexes
test_data     <- data[-training_indexes, ] # Extract data with the indexes not included in training_indexes
best <- NULL
error_ratio <- 10000
for(i in 1:10){ #Training 10 times the model and getting the one with best resoults
# Create Linear Model using training data. Formula = all the columns except charges
model <- lm(formula = charges ~., data = training_data)
# Make the prediction using the model and test data
prediction <- predict(model, test_data)
# Calculate Mean Average Error
mean_avg_error <- mean(abs(prediction - test_data$charges))
if( mean_avg_error < error_ratio){
best <- model
error_ratio <- mean_avg_error
}
}
# Print Mean Absolute Error
print(paste0("- Mean average error: ", mean_avg_error))
# Print model summary
summary(model)
age = c(39) #creamos una persona ficticia que no fuma con la media de los atributos
sex = c("male")
bmi = c(30.66)
children = c(1)
smoker = c("no")
region = c("southwest")
non_smoker_price <- predict(model, newdata = data.frame(age,sex,bmi,children,smoker,region)) #extraemos el precio estimado
View(data)
age = c(39) #creamos una persona ficticia que no fuma con la media de los atributos
sex = c(2)
bmi = c(30.66)
children = c(1)
smoker = c(2)
region = c(1)
non_smoker_price <- predict(model, newdata = data.frame(age,sex,bmi,children,smoker,region)) #extraemos el precio estimado
smoker = c(1) #indicamos que esa misma persona si fuma para ver el cambio
smoker_price     <- predict(model, newdata = data.frame(age,sex,bmi,children,smoker,region)) #extraemos el precio estimado
incremento_por_fumar <- abs(non_smoker_price - smoker_price) #vemos el incremento o decremento que supone fumar o dejar de hacerlo
age = c(20) #creamos una persona ficticia que no fuma con la media de los atributos
sex = c(2)
bmi = c(30.66)
children = c(1)
smoker = c(2)
region = c(1)
non_smoker_price <- predict(model, newdata = data.frame(age,sex,bmi,children,smoker,region)) #extraemos el precio estimado
smoker = c(1) #indicamos que esa misma persona si fuma para ver el cambio
smoker_price     <- predict(model, newdata = data.frame(age,sex,bmi,children,smoker,region)) #extraemos el precio estimado
incremento_por_fumar <- abs(non_smoker_price - smoker_price) #vemos el incremento o decremento que supone fumar o dejar de hacerlo
data$age <- data$age + 5 #incrementamos la edad
data$newCharges <- predict(model, newdata = data) #predecimos el precio en ese tiempo
data$difference <- abs(data$newCharges - data$charges) #calculamos el valor absoluto de la diferencia
data <- data[order(-data$difference),] #ordenamos la diferencia en descendente
mayor_incremento <- head(data,3) #extraemos los usuarios que mayor incremento tendr'an en 5 anyos
View(mayor_incremento)
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clear console
cat("\014")
# Clean workspace
rm(list=ls())
# Set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Install required packages
library(lattice)
library(ggplot2)
library(caret)
library(rpart)
library(rpart.plot)
# Read data from CSV
data <- read.csv(file = "../data/CAR-DETAILS-FROM-CAR-DEKHO.csv", sep =",", header = TRUE)
data$name <- NULL
data$year[data$year <= 2000] <- "<= 2000"
data$year[data$year > 2000 & data$year <= 2005] <- "2000 < x <= 2005"
data$year[data$year > 2005 & data$year <= 2010] <- "2005 < x <= 2010"
data$year[data$year > 2010 & data$year <= 2015] <- "2010 < x <= 2015"
data$year[data$year > 2015 & data$year <= 2020] <- "2015 < x <= 2020"
#for(i in 1:4){
data$selling_price[data$selling_price <= 50000] <- "x <= 50000"
data$selling_price[data$selling_price >  50000 & data$selling_price <= 100000] <- "50000  < x <= 100000"
data$selling_price[data$selling_price > 100000 & data$selling_price <= 200000] <- "100000 < x <= 200000"
data$selling_price[data$selling_price > 200000 & data$selling_price <= 300000] <- "200000 < x <= 300000"
data$selling_price[data$selling_price > 300000 & data$selling_price <= 400000] <- "300000 < x <= 400000"
data$selling_price[data$selling_price > 400000 & data$selling_price <= 500000] <- "400000 < x <= 500000"
data$selling_price[data$selling_price > 500000 & data$selling_price <= 600000] <- "500000 < x <= 600000"
data$selling_price[data$selling_price > 600000] <- "x > 600000"
data$selling_price <- NULL
for( i in 1:2){
data$km_driven[data$km_driven <= 35000] <- "x <= 35000"
data$km_driven[data$km_driven > 35000 & data$km_driven <= 50000] <- "35000 < x <= 50000"
data$km_driven[data$km_driven > 50000 & data$km_driven <= 65000] <- "50000 < x <= 65000"
data$km_driven[data$km_driven > 65000 & data$km_driven <= 80000] <- "65000 < x <= 80000"
data$km_driven[data$km_driven > 80000 & data$km_driven <= 95000] <- "80000 < x <= 95000"
data$km_driven[data$km_driven > 95000] <- "x > 95000"
}
# Convert columns to factors
index <- 1:ncol(data)
data[ , index] <- lapply(data[ , index], as.factor)
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clear console
cat("\014")
# Clean workspace
rm(list=ls())
# Set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Install required packages
library(lattice)
library(ggplot2)
library(caret)
library(rpart)
library(rpart.plot)
# Read data from CSV
data <- read.csv(file = "../data/CAR-DETAILS-FROM-CAR-DEKHO.csv", sep =",", header = TRUE)
data$name <- NULL
data$year[data$year <= 2000] <- "<= 2000"
data$year[data$year > 2000 & data$year <= 2005] <- "2000 < x <= 2005"
data$year[data$year > 2005 & data$year <= 2010] <- "2005 < x <= 2010"
data$year[data$year > 2010 & data$year <= 2015] <- "2010 < x <= 2015"
data$year[data$year > 2015 & data$year <= 2020] <- "2015 < x <= 2020"
#for(i in 1:4){
data$selling_price[data$selling_price <= 50000] <- "x <= 50000"
data$selling_price[data$selling_price >  50000 & data$selling_price <= 100000] <- "50000  < x <= 100000"
data$selling_price[data$selling_price > 100000 & data$selling_price <= 200000] <- "100000 < x <= 200000"
data$selling_price[data$selling_price > 200000 & data$selling_price <= 300000] <- "200000 < x <= 300000"
data$selling_price[data$selling_price > 300000 & data$selling_price <= 400000] <- "300000 < x <= 400000"
data$selling_price[data$selling_price > 400000 & data$selling_price <= 500000] <- "400000 < x <= 500000"
data$selling_price[data$selling_price > 500000 & data$selling_price <= 600000] <- "500000 < x <= 600000"
data$selling_price[data$selling_price > 600000] <- "x > 600000"
data$selling_price <- NULL
data$km_driven[data$km_driven <= 35000] <- "x <= 35000"
data$km_driven[data$km_driven > 35000 & data$km_driven <= 50000] <- "35000 < x <= 50000"
data$km_driven[data$km_driven > 50000 & data$km_driven <= 65000] <- "50000 < x <= 65000"
data$km_driven[data$km_driven > 65000 & data$km_driven <= 80000] <- "65000 < x <= 80000"
data$km_driven[data$km_driven > 80000 & data$km_driven <= 95000] <- "80000 < x <= 95000"
data$km_driven[data$km_driven > 95000] <- "x > 95000"
# Convert columns to factors
index <- 1:ncol(data)
data[ , index] <- lapply(data[ , index], as.factor)
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clear console
cat("\014")
# Clean workspace
rm(list=ls())
# Set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Install required packages
library(lattice)
library(ggplot2)
library(caret)
library(rpart)
library(rpart.plot)
# Read data from CSV
data <- read.csv(file = "../data/CAR-DETAILS-FROM-CAR-DEKHO.csv", sep =",", header = TRUE)
data$name <- NULL
data$year[data$year <= 2000] <- "<= 2000"
data$year[data$year > 2000 & data$year <= 2005] <- "2000 < x <= 2005"
data$year[data$year > 2005 & data$year <= 2010] <- "2005 < x <= 2010"
data$year[data$year > 2010 & data$year <= 2015] <- "2010 < x <= 2015"
data$year[data$year > 2015 & data$year <= 2020] <- "2015 < x <= 2020"
#for(i in 1:4){
data$selling_price[data$selling_price <= 50000] <- "x <= 50000"
data$selling_price[data$selling_price >  50000 & data$selling_price <= 100000] <- "50000  < x <= 100000"
data$selling_price[data$selling_price > 100000 & data$selling_price <= 200000] <- "100000 < x <= 200000"
data$selling_price[data$selling_price > 200000 & data$selling_price <= 300000] <- "200000 < x <= 300000"
data$selling_price[data$selling_price > 300000 & data$selling_price <= 400000] <- "300000 < x <= 400000"
data$selling_price[data$selling_price > 400000 & data$selling_price <= 500000] <- "400000 < x <= 500000"
data$selling_price[data$selling_price > 500000 & data$selling_price <= 600000] <- "500000 < x <= 600000"
data$selling_price[data$selling_price > 600000] <- "x > 600000"
data$selling_price <- NULL
for( i in 1:2){
data$km_driven[data$km_driven <= 35000] <- "x <= 35000"
data$km_driven[data$km_driven > 35000 & data$km_driven <= 50000] <- "35000 < x <= 50000"
data$km_driven[data$km_driven > 50000 & data$km_driven <= 65000] <- "50000 < x <= 65000"
data$km_driven[data$km_driven > 65000 & data$km_driven <= 80000] <- "65000 < x <= 80000"
data$km_driven[data$km_driven > 80000 & data$km_driven <= 95000] <- "80000 < x <= 95000"
data$km_driven[data$km_driven > 95000] <- "x > 95000"
}
# Convert columns to factors
index <- 1:ncol(data)
data[ , index] <- lapply(data[ , index], as.factor)
View(data)
table(data)
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clear console
cat("\014")
# Clean workspace
rm(list=ls())
# Set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Install required packages
library(lattice)
library(ggplot2)
library(caret)
library(rpart)
library(rpart.plot)
# Read data from CSV
data <- read.csv(file = "../data/CAR-DETAILS-FROM-CAR-DEKHO.csv", sep =",", header = TRUE)
data$name <- NULL
data$year[data$year <= 2000] <- "<= 2000"
data$year[data$year > 2000 & data$year <= 2005] <- "2000 < x <= 2005"
data$year[data$year > 2005 & data$year <= 2010] <- "2005 < x <= 2010"
data$year[data$year > 2010 & data$year <= 2015] <- "2010 < x <= 2015"
data$year[data$year > 2015 & data$year <= 2020] <- "2015 < x <= 2020"
#for(i in 1:4){
data$selling_price[data$selling_price <= 50000] <- "x <= 50000"
data$selling_price[data$selling_price >  50000 & data$selling_price <= 100000] <- "50000  < x <= 100000"
data$selling_price[data$selling_price > 100000 & data$selling_price <= 200000] <- "100000 < x <= 200000"
data$selling_price[data$selling_price > 200000 & data$selling_price <= 300000] <- "200000 < x <= 300000"
data$selling_price[data$selling_price > 300000 & data$selling_price <= 400000] <- "300000 < x <= 400000"
data$selling_price[data$selling_price > 400000 & data$selling_price <= 500000] <- "400000 < x <= 500000"
data$selling_price[data$selling_price > 500000 & data$selling_price <= 600000] <- "500000 < x <= 600000"
data$selling_price[data$selling_price > 600000] <- "x > 600000"
data$selling_price <- NULL
for( i in 1:2){
data$km_driven[data$km_driven <= 35000] <- "x <= 35000"
data$km_driven[data$km_driven > 35000 & data$km_driven <= 50000] <- "35000 < x <= 50000"
data$km_driven[data$km_driven > 50000 & data$km_driven <= 65000] <- "50000 < x <= 65000"
data$km_driven[data$km_driven > 65000 & data$km_driven <= 80000] <- "65000 < x <= 80000"
data$km_driven[data$km_driven > 80000 & data$km_driven <= 95000] <- "80000 < x <= 95000"
data$km_driven[data$km_driven > 95000] <- "x > 95000"
}
# Convert columns to factors
index <- 1:ncol(data)
data[ , index] <- lapply(data[ , index], as.factor)
View(data)
data
table(data$year)
table(data$km_driven)
table(data$fuel)
table(data$seller_type)
table(data$transmission)
table(data$owner)
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clear console
cat("\014")
# Clean workspace
rm(list=ls())
# Set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Install required packages
library(lattice)
library(ggplot2)
library(caret)
library(rpart)
library(rpart.plot)
# Read data from CSV
data <- read.csv(file = "../data/CAR-DETAILS-FROM-CAR-DEKHO.csv", sep =",", header = TRUE)
data$name <- NULL
data$year[data$year <= 2000] <- "<= 2000"
data$year[data$year > 2000 & data$year <= 2005] <- "2000 < x <= 2005"
data$year[data$year > 2005 & data$year <= 2010] <- "2005 < x <= 2010"
data$year[data$year > 2010 & data$year <= 2015] <- "2010 < x <= 2015"
data$year[data$year > 2015 & data$year <= 2020] <- "2015 < x <= 2020"
#for(i in 1:4){
data$selling_price[data$selling_price <= 50000] <- "x <= 50000"
data$selling_price[data$selling_price >  50000 & data$selling_price <= 100000] <- "50000  < x <= 100000"
data$selling_price[data$selling_price > 100000 & data$selling_price <= 200000] <- "100000 < x <= 200000"
data$selling_price[data$selling_price > 200000 & data$selling_price <= 300000] <- "200000 < x <= 300000"
data$selling_price[data$selling_price > 300000 & data$selling_price <= 400000] <- "300000 < x <= 400000"
data$selling_price[data$selling_price > 400000 & data$selling_price <= 500000] <- "400000 < x <= 500000"
data$selling_price[data$selling_price > 500000 & data$selling_price <= 600000] <- "500000 < x <= 600000"
data$selling_price[data$selling_price > 600000] <- "x > 600000"
for( i in 1:2){
data$km_driven[data$km_driven <= 35000] <- "x <= 35000"
data$km_driven[data$km_driven > 35000 & data$km_driven <= 50000] <- "35000 < x <= 50000"
data$km_driven[data$km_driven > 50000 & data$km_driven <= 65000] <- "50000 < x <= 65000"
data$km_driven[data$km_driven > 65000 & data$km_driven <= 80000] <- "65000 < x <= 80000"
data$km_driven[data$km_driven > 80000 & data$km_driven <= 95000] <- "80000 < x <= 95000"
data$km_driven[data$km_driven > 95000] <- "x > 95000"
}
# Convert columns to factors
index <- 1:ncol(data)
data[ , index] <- lapply(data[ , index], as.factor)
table(data$km_driven)
table(data$selling_price)
View(data)
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clear console
cat("\014")
# Clean workspace
rm(list=ls())
# Set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Install required packages
library(lattice)
library(ggplot2)
library(caret)
library(rpart)
library(rpart.plot)
# Read data from CSV
data <- read.csv(file = "../data/CAR-DETAILS-FROM-CAR-DEKHO.csv", sep =",", header = TRUE)
data$name <- NULL
data$year[data$year <= 2000] <- "<= 2000"
data$year[data$year > 2000 & data$year <= 2005] <- "2000 < x <= 2005"
data$year[data$year > 2005 & data$year <= 2010] <- "2005 < x <= 2010"
data$year[data$year > 2010 & data$year <= 2015] <- "2010 < x <= 2015"
data$year[data$year > 2015 & data$year <= 2020] <- "2015 < x <= 2020"
for(i in 1:40){
for(i in 1:40){
data$selling_price[data$selling_price <= 50000] <- "x <= 50000"
data$selling_price[data$selling_price >  50000 & data$selling_price <= 100000] <- "50000  < x <= 100000"
data$selling_price[data$selling_price > 100000 & data$selling_price <= 200000] <- "100000 < x <= 200000"
data$selling_price[data$selling_price > 200000 & data$selling_price <= 300000] <- "200000 < x <= 300000"
data$selling_price[data$selling_price > 300000 & data$selling_price <= 400000] <- "300000 < x <= 400000"
data$selling_price[data$selling_price > 400000 & data$selling_price <= 500000] <- "400000 < x <= 500000"
data$selling_price[data$selling_price > 500000 & data$selling_price <= 600000] <- "500000 < x <= 600000"
data$selling_price[data$selling_price > 600000] <- "x > 600000"
#data$selling_price <- NULL
}
for( i in 1:2){
data$km_driven[data$km_driven <= 35000] <- "x <= 35000"
data$km_driven[data$km_driven > 35000 & data$km_driven <= 50000] <- "35000 < x <= 50000"
data$km_driven[data$km_driven > 50000 & data$km_driven <= 65000] <- "50000 < x <= 65000"
data$km_driven[data$km_driven > 65000 & data$km_driven <= 80000] <- "65000 < x <= 80000"
data$km_driven[data$km_driven > 80000 & data$km_driven <= 95000] <- "80000 < x <= 95000"
data$km_driven[data$km_driven > 95000] <- "x > 95000"
}
# Convert columns to factors
index <- 1:ncol(data)
data[ , index] <- lapply(data[ , index], as.factor)
# Convert columns to factors
index <- 1:ncol(data)
data[ , index] <- lapply(data[ , index], as.factor)
table(data)
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clear console
cat("\014")
# Clean workspace
rm(list=ls())
# Set working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Install required packages
library(lattice)
library(ggplot2)
library(caret)
